// Code generated by 'go generate'; DO NOT EDIT.

package time

import (
	"strconv"

	"github.com/gad-lang/gad"
)

// funcPTROEx is a generated function to make gad.CallableExFunc.
// Source: funcPTRO(t *Time) (ret gad.Object)
func funcPTROEx(fn func(*Time) gad.Object) gad.CallableExFunc {
	return func(args gad.Call) (ret gad.Object, err error) {
		if err := args.CheckLen(1); err != nil {
			return gad.Undefined, err
		}

		t, ok := ToTime(args.Get(0))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args.Get(0).TypeName())
		}

		ret = fn(t)
		return
	}
}

// funcPTi64ROEx is a generated function to make gad.CallableExFunc.
// Source: funcPTi64RO(t *Time, d int64) (ret gad.Object)
func funcPTi64ROEx(fn func(*Time, int64) gad.Object) gad.CallableExFunc {
	return func(args gad.Call) (ret gad.Object, err error) {
		if err := args.CheckLen(2); err != nil {
			return gad.Undefined, err
		}

		t, ok := ToTime(args.Get(0))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args.Get(0).TypeName())
		}
		d, ok := gad.ToGoInt64(args.Get(1))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "int", args.Get(1).TypeName())
		}

		ret = fn(t, d)
		return
	}
}

// funcPTTROEx is a generated function to make gad.CallableExFunc.
// Source: funcPTTRO(t1 *Time, t2 *Time) (ret gad.Object)
func funcPTTROEx(fn func(*Time, *Time) gad.Object) gad.CallableExFunc {
	return func(args gad.Call) (ret gad.Object, err error) {
		if err := args.CheckLen(2); err != nil {
			return gad.Undefined, err
		}

		t1, ok := ToTime(args.Get(0))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args.Get(0).TypeName())
		}
		t2, ok := ToTime(args.Get(1))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "time", args.Get(1).TypeName())
		}

		ret = fn(t1, t2)
		return
	}
}

// funcPTiiiROEx is a generated function to make gad.CallableExFunc.
// Source: funcPTiiiRO(t *Time, i1 int, i2 int, i3 int) (ret gad.Object)
func funcPTiiiROEx(fn func(*Time, int, int, int) gad.Object) gad.CallableExFunc {
	return func(args gad.Call) (ret gad.Object, err error) {
		if err := args.CheckLen(4); err != nil {
			return gad.Undefined, err
		}

		t, ok := ToTime(args.Get(0))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args.Get(0).TypeName())
		}
		i1, ok := gad.ToGoInt(args.Get(1))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "int", args.Get(1).TypeName())
		}
		i2, ok := gad.ToGoInt(args.Get(2))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("3rd", "int", args.Get(2).TypeName())
		}
		i3, ok := gad.ToGoInt(args.Get(3))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("4th", "int", args.Get(3).TypeName())
		}

		ret = fn(t, i1, i2, i3)
		return
	}
}

// funcPTsROEx is a generated function to make gad.CallableExFunc.
// Source: funcPTsRO(t *Time, s string) (ret gad.Object)
func funcPTsROEx(fn func(*Time, string) gad.Object) gad.CallableExFunc {
	return func(args gad.Call) (ret gad.Object, err error) {
		if err := args.CheckLen(2); err != nil {
			return gad.Undefined, err
		}

		t, ok := ToTime(args.Get(0))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args.Get(0).TypeName())
		}
		s, ok := gad.ToGoString(args.Get(1))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "string", args.Get(1).TypeName())
		}

		ret = fn(t, s)
		return
	}
}

// funcPTb2sROEx is a generated function to make gad.CallableExFunc.
// Source: funcPTb2sRO(t *Time, b []byte, s string) (ret gad.Object)
func funcPTb2sROEx(fn func(*Time, []byte, string) gad.Object) gad.CallableExFunc {
	return func(args gad.Call) (ret gad.Object, err error) {
		if err := args.CheckLen(3); err != nil {
			return gad.Undefined, err
		}

		t, ok := ToTime(args.Get(0))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args.Get(0).TypeName())
		}
		b, ok := gad.ToGoByteSlice(args.Get(1))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "bytes", args.Get(1).TypeName())
		}
		s, ok := gad.ToGoString(args.Get(2))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("3rd", "string", args.Get(2).TypeName())
		}

		ret = fn(t, b, s)
		return
	}
}

// funcPTLROEx is a generated function to make gad.CallableExFunc.
// Source: funcPTLRO(t *Time, loc *Location) (ret gad.Object)
func funcPTLROEx(fn func(*Time, *Location) gad.Object) gad.CallableExFunc {
	return func(args gad.Call) (ret gad.Object, err error) {
		if err := args.CheckLen(2); err != nil {
			return gad.Undefined, err
		}

		t, ok := ToTime(args.Get(0))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args.Get(0).TypeName())
		}
		loc, ok := ToLocation(args.Get(1))
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "location", args.Get(1).TypeName())
		}

		ret = fn(t, loc)
		return
	}
}

// funcPTRO is a generated function to make gad.CallableFunc.
// Source: funcPTRO(t *Time) (ret gad.Object)
func funcPTRO(fn func(*Time) gad.Object) gad.CallableFunc {
	return func(args ...gad.Object) (ret gad.Object, err error) {
		if len(args) != 1 {
			return gad.Undefined, gad.ErrWrongNumArguments.NewError("want=1 got=" + strconv.Itoa(len(args)))
		}

		t, ok := ToTime(args[0])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args[0].TypeName())
		}

		ret = fn(t)
		return
	}
}

// funcPTi64RO is a generated function to make gad.CallableFunc.
// Source: funcPTi64RO(t *Time, d int64) (ret gad.Object)
func funcPTi64RO(fn func(*Time, int64) gad.Object) gad.CallableFunc {
	return func(args ...gad.Object) (ret gad.Object, err error) {
		if len(args) != 2 {
			return gad.Undefined, gad.ErrWrongNumArguments.NewError("want=2 got=" + strconv.Itoa(len(args)))
		}

		t, ok := ToTime(args[0])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args[0].TypeName())
		}
		d, ok := gad.ToGoInt64(args[1])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "int", args[1].TypeName())
		}

		ret = fn(t, d)
		return
	}
}

// funcPTTRO is a generated function to make gad.CallableFunc.
// Source: funcPTTRO(t1 *Time, t2 *Time) (ret gad.Object)
func funcPTTRO(fn func(*Time, *Time) gad.Object) gad.CallableFunc {
	return func(args ...gad.Object) (ret gad.Object, err error) {
		if len(args) != 2 {
			return gad.Undefined, gad.ErrWrongNumArguments.NewError("want=2 got=" + strconv.Itoa(len(args)))
		}

		t1, ok := ToTime(args[0])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args[0].TypeName())
		}
		t2, ok := ToTime(args[1])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "time", args[1].TypeName())
		}

		ret = fn(t1, t2)
		return
	}
}

// funcPTiiiRO is a generated function to make gad.CallableFunc.
// Source: funcPTiiiRO(t *Time, i1 int, i2 int, i3 int) (ret gad.Object)
func funcPTiiiRO(fn func(*Time, int, int, int) gad.Object) gad.CallableFunc {
	return func(args ...gad.Object) (ret gad.Object, err error) {
		if len(args) != 4 {
			return gad.Undefined, gad.ErrWrongNumArguments.NewError("want=4 got=" + strconv.Itoa(len(args)))
		}

		t, ok := ToTime(args[0])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args[0].TypeName())
		}
		i1, ok := gad.ToGoInt(args[1])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "int", args[1].TypeName())
		}
		i2, ok := gad.ToGoInt(args[2])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("3rd", "int", args[2].TypeName())
		}
		i3, ok := gad.ToGoInt(args[3])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("4th", "int", args[3].TypeName())
		}

		ret = fn(t, i1, i2, i3)
		return
	}
}

// funcPTsRO is a generated function to make gad.CallableFunc.
// Source: funcPTsRO(t *Time, s string) (ret gad.Object)
func funcPTsRO(fn func(*Time, string) gad.Object) gad.CallableFunc {
	return func(args ...gad.Object) (ret gad.Object, err error) {
		if len(args) != 2 {
			return gad.Undefined, gad.ErrWrongNumArguments.NewError("want=2 got=" + strconv.Itoa(len(args)))
		}

		t, ok := ToTime(args[0])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args[0].TypeName())
		}
		s, ok := gad.ToGoString(args[1])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "string", args[1].TypeName())
		}

		ret = fn(t, s)
		return
	}
}

// funcPTb2sRO is a generated function to make gad.CallableFunc.
// Source: funcPTb2sRO(t *Time, b []byte, s string) (ret gad.Object)
func funcPTb2sRO(fn func(*Time, []byte, string) gad.Object) gad.CallableFunc {
	return func(args ...gad.Object) (ret gad.Object, err error) {
		if len(args) != 3 {
			return gad.Undefined, gad.ErrWrongNumArguments.NewError("want=3 got=" + strconv.Itoa(len(args)))
		}

		t, ok := ToTime(args[0])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args[0].TypeName())
		}
		b, ok := gad.ToGoByteSlice(args[1])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "bytes", args[1].TypeName())
		}
		s, ok := gad.ToGoString(args[2])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("3rd", "string", args[2].TypeName())
		}

		ret = fn(t, b, s)
		return
	}
}

// funcPTLRO is a generated function to make gad.CallableFunc.
// Source: funcPTLRO(t *Time, loc *Location) (ret gad.Object)
func funcPTLRO(fn func(*Time, *Location) gad.Object) gad.CallableFunc {
	return func(args ...gad.Object) (ret gad.Object, err error) {
		if len(args) != 2 {
			return gad.Undefined, gad.ErrWrongNumArguments.NewError("want=2 got=" + strconv.Itoa(len(args)))
		}

		t, ok := ToTime(args[0])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("1st", "time", args[0].TypeName())
		}
		loc, ok := ToLocation(args[1])
		if !ok {
			return gad.Undefined, gad.NewArgumentTypeError("2nd", "location", args[1].TypeName())
		}

		ret = fn(t, loc)
		return
	}
}
