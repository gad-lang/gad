// Code generated by 'go generate'; DO NOT EDIT.

package ugo

import (
	"strconv"
)

// funcPOsRe is a generated function to make CallableFunc.
// Source: func(o Object, k string) (err error)
func funcPOsRe(fn func(Object, string) error) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 2 {
			return Undefined, ErrWrongNumArguments.NewError("want=2 got=" + strconv.Itoa(len(args)))
		}

		o := args[0]
		k, ok := ToGoString(args[1])
		if !ok {
			return Undefined, NewArgumentTypeError("2nd", "string", args[1].TypeName())
		}

		err = fn(o, k)
		ret = Undefined
		return
	}
}

// funcPORO is a generated function to make CallableFunc.
// Source: func(o Object) (ret Object)
func funcPORO(fn func(Object) Object) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 1 {
			return Undefined, ErrWrongNumArguments.NewError("want=1 got=" + strconv.Itoa(len(args)))
		}

		o := args[0]

		ret = fn(o)
		return
	}
}

// funcPOiROe is a generated function to make CallableFunc.
// Source: func(o Object, n int) (ret Object, err error)
func funcPOiROe(fn func(Object, int) (Object, error)) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 2 {
			return Undefined, ErrWrongNumArguments.NewError("want=2 got=" + strconv.Itoa(len(args)))
		}

		o := args[0]
		n, ok := ToGoInt(args[1])
		if !ok {
			return Undefined, NewArgumentTypeError("2nd", "int", args[1].TypeName())
		}

		ret, err = fn(o, n)
		return
	}
}

// funcPiOROe is a generated function to make CallableFunc.
// Source: func(n int, o Object) (ret Object, err error)
func funcPiOROe(fn func(int, Object) (Object, error)) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 2 {
			return Undefined, ErrWrongNumArguments.NewError("want=2 got=" + strconv.Itoa(len(args)))
		}

		n, ok := ToGoInt(args[0])
		if !ok {
			return Undefined, NewArgumentTypeError("1st", "int", args[0].TypeName())
		}
		o := args[1]

		ret, err = fn(n, o)
		return
	}
}

// funcPOOROe is a generated function to make CallableFunc.
// Source: func(o Object, v Object) (ret Object, err error)
func funcPOOROe(fn func(Object, Object) (Object, error)) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 2 {
			return Undefined, ErrWrongNumArguments.NewError("want=2 got=" + strconv.Itoa(len(args)))
		}

		o := args[0]
		v := args[1]

		ret, err = fn(o, v)
		return
	}
}

// funcPOROe is a generated function to make CallableFunc.
// Source: func(o Object) (ret Object, err error)
func funcPOROe(fn func(Object) (Object, error)) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 1 {
			return Undefined, ErrWrongNumArguments.NewError("want=1 got=" + strconv.Itoa(len(args)))
		}

		o := args[0]

		ret, err = fn(o)
		return
	}
}

// funcPsRO is a generated function to make CallableFunc.
// Source: func(s string) (ret Object)
func funcPsRO(fn func(string) Object) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 1 {
			return Undefined, ErrWrongNumArguments.NewError("want=1 got=" + strconv.Itoa(len(args)))
		}

		s, ok := ToGoString(args[0])
		if !ok {
			return Undefined, NewArgumentTypeError("1st", "string", args[0].TypeName())
		}

		ret = fn(s)
		return
	}
}

// funcPi64RO is a generated function to make CallableFunc.
// Source: func(v int64) (ret Object)
func funcPi64RO(fn func(int64) Object) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 1 {
			return Undefined, ErrWrongNumArguments.NewError("want=1 got=" + strconv.Itoa(len(args)))
		}

		v, ok := ToGoInt64(args[0])
		if !ok {
			return Undefined, NewArgumentTypeError("1st", "int", args[0].TypeName())
		}

		ret = fn(v)
		return
	}
}

// funcPu64RO is a generated function to make CallableFunc.
// Source: func(v uint64) (ret Object)
func funcPu64RO(fn func(uint64) Object) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 1 {
			return Undefined, ErrWrongNumArguments.NewError("want=1 got=" + strconv.Itoa(len(args)))
		}

		v, ok := ToGoUint64(args[0])
		if !ok {
			return Undefined, NewArgumentTypeError("1st", "uint", args[0].TypeName())
		}

		ret = fn(v)
		return
	}
}

// funcPrRO is a generated function to make CallableFunc.
// Source: func(v rune) (ret Object)
func funcPrRO(fn func(rune) Object) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 1 {
			return Undefined, ErrWrongNumArguments.NewError("want=1 got=" + strconv.Itoa(len(args)))
		}

		v, ok := ToGoRune(args[0])
		if !ok {
			return Undefined, NewArgumentTypeError("1st", "char", args[0].TypeName())
		}

		ret = fn(v)
		return
	}
}

// funcPf64RO is a generated function to make CallableFunc.
// Source: func(v float64) (ret Object)
func funcPf64RO(fn func(float64) Object) CallableFunc {
	return func(args ...Object) (ret Object, err error) {
		if len(args) != 1 {
			return Undefined, ErrWrongNumArguments.NewError("want=1 got=" + strconv.Itoa(len(args)))
		}

		v, ok := ToGoFloat64(args[0])
		if !ok {
			return Undefined, NewArgumentTypeError("1st", "float", args[0].TypeName())
		}

		ret = fn(v)
		return
	}
}
